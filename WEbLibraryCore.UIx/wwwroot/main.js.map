{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/book/book-create.component.html","webpack:///./src/app/book/book-create.component.ts","webpack:///./src/app/book/book-delete.component.html","webpack:///./src/app/book/book-delete.component.ts","webpack:///./src/app/book/book-edit.component.html","webpack:///./src/app/book/book-edit.component.ts","webpack:///./src/app/book/book-list.component.html","webpack:///./src/app/book/book-list.component.ts","webpack:///./src/app/book/book.ts","webpack:///./src/app/book/data.bookService.ts","webpack:///./src/app/book/not-found.component.ts","webpack:///./src/app/nav-menu/nav-menu.component.css","webpack:///./src/app/nav-menu/nav-menu.component.html","webpack:///./src/app/nav-menu/nav-menu.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"body{\\r\\n  background-color: antiquewhite;\\r\\n}\\r\\n.content-main{\\r\\n  margin-left : 21%;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n  <nav-menu></nav-menu>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container content-main\\\">\\r\\n\\r\\n  <button kendoButton  [routerLink]=\\\"['/']\\\" [primary]=\\\"true\\\">My Kendo UI Button</button>\\r\\n\\r\\n  <!--SIMPLE ANALOG OF TOOLBAR-->\\r\\n\\r\\n  <!--<button kendoButton  [routerLink]=\\\"['/edit/:{id}']\\\" [primary]=\\\"true\\\">My Kendo UI Button</button>-->\\r\\n\\r\\n  <!--<button kendoButton (click)=\\\"onButtonClick()\\\" [primary]=\\\"true\\\">My Kendo UI Button</button>-->\\r\\n\\r\\n  <br />\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Http, XHRBackend } from '@angular/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor(private _httpService: Http) { }\r\n\r\n  //title = 'Hello World!';\r\n  //onButtonClick() {\r\n  //  this._httpService.get('http://localhost:55511/api/Book');\r\n  //}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\n\r\n//BOOK\r\nimport { BookListComponent } from './book/book-list.component';\r\nimport { BookCreateComponent } from './book/book-create.component';\r\nimport { BookEditComponent } from './book/book-edit.component';\r\nimport { BookDeleteComponent } from './book/book-delete.component';\r\nimport { NotFoundComponent } from './book/not-found.component';\r\nimport { DataBookService } from './book/data.bookService';\r\n\r\n//KENDO UI\r\nimport { ButtonsModule } from '@progress/kendo-angular-buttons';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\n\r\n//ANGULAR ANIMATIONS\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//import { MagazineComponent } from './magazine/magazine.component';\r\n//import { DataMagazineService } from './magazine/data.magazineService';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: BookListComponent },\r\n  { path: 'create', component: BookCreateComponent },\r\n  { path: 'edit/:id', component: BookEditComponent },\r\n  { path: 'delete/:id', component: BookDeleteComponent },\r\n  { path: '*', component: NotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BookDeleteComponent,\r\n    BookListComponent,\r\n    BookCreateComponent,\r\n    BookEditComponent,\r\n    NotFoundComponent,\r\n    NavMenuComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    ButtonsModule,\r\n    GridModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  providers: [AppComponent, DataBookService, BookDeleteComponent, BookListComponent, BookCreateComponent, BookEditComponent, NavMenuComponent, NotFoundComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div>\\r\\n    <h2>Добавление новой книги</h2>\\r\\n    <!--<book-form [(book)]=\\\"book\\\"></book-form>-->\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"button\\\" value=\\\"Сохранить\\\" (click)=\\\"save()\\\" class=\\\"btn btn-success\\\" />\\r\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-warning\\\">Отмена</a>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataBookService } from './data.bookService';\r\nimport { Book } from './book';\r\n \r\n@Component({\r\n    templateUrl: './book-create.component.html'\r\n})\r\nexport class BookCreateComponent {\r\n \r\n  book: Book;    // добавляемый объект\r\n  constructor(private bookService: DataBookService, private router: Router) { }\r\n    save() {\r\n        this.bookService.createBook(this.book).subscribe(data => this.router.navigateByUrl(\"/\"));\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"form-group\\\">\\r\\n  <label>Название Delete</label>\\r\\n  \\r\\n</div>\\r\\n\\r\\n\"","import { Component, Input } from '@angular/core';\r\nimport { Book } from './book';\r\nimport { DataBookService } from './data.bookService';\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { Response } from '@angular/http';\r\nimport { HttpHeaders } from \"@angular/common/http\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-book',\r\n  templateUrl: './book-delete.component.html'\r\n})\r\n\r\nexport class BookDeleteComponent {\r\n\r\n  constructor(private dataService: DataBookService) { }\r\n\r\n\r\n}\r\n\r\n","module.exports = \"<div *ngIf=\\\"loaded\\\">\\r\\n  <h2>Изменение данных о книге</h2>\\r\\n  <div class=\\\"form-group\\\">\\r\\n\\r\\n    <input type=\\\"button\\\" value=\\\"Сохранить\\\" (click)=\\\"save()\\\" class=\\\"btn btn-success\\\" />\\r\\n  </div>\\r\\n</div>\\r\\n<a routerLink=\\\"/\\\" class=\\\"nav-link\\\">Назад к списку</a>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataBookService } from './data.bookService';\r\nimport { Book } from './book';\r\n\r\n@Component({\r\n  templateUrl: './book-edit.component.html'\r\n})\r\n\r\nexport class BookEditComponent implements OnInit {\r\n  id: number;\r\n  book: Book;\r\n  loaded: boolean = false;\r\n\r\n\r\n  constructor(private bookService: DataBookService, private router: Router, activeRoute: ActivatedRoute) {\r\n    this.id = Number.parseInt(activeRoute.snapshot.params[\"id\"]);\r\n  }\r\n  ngOnInit(): void {\r\n    this.getBook(this.id);\r\n   // if (this.loaded) {\r\n      this.bookService.updateBook(this.book);\r\n    //}\r\n    //else {\r\n      \r\n    //}\r\n  }\r\n\r\n  getBook(id: number) {\r\n      this.bookService.getBook(this.id).subscribe((data: Book) => {\r\n        this.book = data;\r\n        ////for what???////\r\n        if (this.book != null) {\r\n          this.loaded = true\r\n        }\r\n      });\r\n  }\r\n\r\n  save() {\r\n    this.bookService.updateBook(this.book);//.subscribe(data => this.router.navigateByUrl(\"/\"));\r\n  }\r\n}\r\n","module.exports = \"<base href=\\\"/\\\">\\r\\n<br />\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label>List of books</label>\\r\\n</div>\\r\\n<!--<ng-template #readOnlyTemplate let-books>-->\\r\\n<kendo-grid [kendoGridInCellEditing]=\\\"createFormGroup\\\"\\r\\n            [kendoGridBinding]=\\\"books\\\"\\r\\n            [height]=\\\"500\\\"\\r\\n            [pageSize]=\\\"10\\\"\\r\\n            [pageable]=\\\"true\\\"\\r\\n            [sortable]=\\\"true\\\"\\r\\n            [navigable]=\\\"true\\\"\\r\\n            (edit)=\\\"editHandler($event)\\\" \\r\\n            (save)=\\\"saveHandler($event)\\\" (remove)=\\\"removeHandler($event)\\\"\\r\\n            (dataStateChange)=\\\"onStateChange($event)\\\">\\r\\n\\r\\n    <ng-template kendoGridToolbarTemplate>\\r\\n      <button kendoGridAddCommand type=\\\"button\\\">Add new</button>\\r\\n    </ng-template>\\r\\n    <!--<kendo-grid-column field=\\\"bookID\\\" title=\\\"BookID\\\" width=\\\"70\\\"></kendo-grid-column>-->\\r\\n    <kendo-grid-column field=\\\"genreID\\\" editor=\\\"numeric\\\" title=\\\"Genre\\\" width=\\\"100\\\"></kendo-grid-column>\\r\\n    <kendo-grid-column field=\\\"bookName\\\" editor=\\\"string\\\" title=\\\"Name\\\" width=\\\"120\\\"></kendo-grid-column>\\r\\n    <kendo-grid-column field=\\\"yearOfPublish\\\" editor=\\\"numeric\\\" title=\\\"Year\\\"></kendo-grid-column>\\r\\n    <kendo-grid-command-column title=\\\"Action\\\" width=\\\"220\\\">\\r\\n      <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\r\\n        <button kendoGridEditCommand type=\\\"button\\\" [primary]=\\\"true\\\" isNew=\\\"false\\\">Edit</button>\\r\\n        <button kendoGridRemoveCommand type=\\\"button\\\">Remove</button>\\r\\n        <button kendoGridSaveCommand type=\\\"button\\\" *ngIf=\\\"isInEditingMode\\\">\\r\\n          {{ isNew ? 'Save' : 'Update' }}\\r\\n        </button>\\r\\n        <button kendoGridCancelCommand type=\\\"button\\\">{{ isNew ? 'Discard changes' : 'Cancel' }}</button>\\r\\n      </ng-template>\\r\\n    </kendo-grid-command-column>\\r\\n\\r\\n  </kendo-grid>\\r\\n\\r\\n\\r\\n\\r\\n  <!--<kendo-grid [data]=\\\"books\\\"\\r\\n              [height]=\\\"420\\\"\\r\\n              (edit)=\\\"editHandler($event)\\\" (cancel)=\\\"cancelHandler($event)\\\"\\r\\n              (save)=\\\"saveHandler($event)\\\" (remove)=\\\"removeHandler($event)\\\"\\r\\n              (add)=\\\"addHandler($event)\\\"\\r\\n              [navigable]=\\\"true\\\"\\r\\n              (dataStateChange)=\\\"onStateChange($event)\\\"\\r\\n              [kendoGridReactiveEditing]=\\\"createFormGroup\\\">\\r\\n    <ng-template kendoGridToolbarTemplate>\\r\\n      <button kendoGridAddCommand type=\\\"button\\\">Add new</button>\\r\\n    </ng-template>\\r\\n    <kendo-grid-column field=\\\"genreID\\\" title=\\\"Genre\\\" width=\\\"70\\\">\\r\\n      <ng-template kendoGridEditTemplate let-dataItem=\\\"books\\\">\\r\\n        <input [(ngModel)]=\\\"books.genreID\\\" kendoGridFocusable name=\\\"genreID\\\" class=\\\"k-textbox\\\" type=\\\"number\\\" required />\\r\\n      </ng-template>\\r\\n    </kendo-grid-column>\\r\\n    <kendo-grid-column field=\\\"bookName\\\" title=\\\"Name\\\" width=\\\"120\\\">\\r\\n      <ng-template kendoGridEditTemplate let-dataItem=\\\"books\\\">\\r\\n        <input [(ngModel)]=\\\"books.bookName\\\" kendoGridFocusable name=\\\"bookName\\\" class=\\\"k-textbox\\\" required />\\r\\n      </ng-template>\\r\\n    </kendo-grid-column>\\r\\n    <kendo-grid-column field=\\\"yearOfPublish\\\" title=\\\"Year\\\">\\r\\n      <ng-template kendoGridEditTemplate let-dataItem=\\\"books\\\">\\r\\n        <input [(ngModel)]=\\\"books.yearOfPublish\\\" kendoGridFocusable name=\\\"yearOfPublish\\\" class=\\\"k-textbox\\\" type=\\\"number\\\" min=\\\"876\\\" max=\\\"2018\\\" required />\\r\\n      </ng-template>\\r\\n    </kendo-grid-column>\\r\\n    <kendo-grid-command-column title=\\\"Action\\\" width=\\\"220\\\">\\r\\n      <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\r\\n        <button kendoGridEditCommand type=\\\"button\\\" [primary]=\\\"true\\\">Edit</button>\\r\\n        <button kendoGridRemoveCommand type=\\\"button\\\">Remove</button>\\r\\n        <button kendoGridSaveCommand type=\\\"button\\\">\\r\\n          {{ isNew ? 'Save' : 'Update' }}\\r\\n        </button>\\r\\n        <button kendoGridCancelCommand type=\\\"button\\\">{{ isNew ? 'Discard changes' : 'Cancel' }}</button>\\r\\n      </ng-template>\\r\\n    </kendo-grid-command-column>\\r\\n\\r\\n  </kendo-grid>-->\\r\\n\\r\\n  <br />\\r\\n\\r\\n  <!--<form novalidate #myForm=\\\"ngForm\\\">\\r\\n\\r\\n\\r\\n\\r\\n      [formControl]=\\\"formGroup.get(column.field)\\\"\\r\\n\\r\\n\\r\\n    <kendo-grid [data]=\\\"view | async\\\"\\r\\n                [height]=\\\"533\\\"\\r\\n                [pageSize]=\\\"gridState.take\\\" [skip]=\\\"gridState.skip\\\" [sort]=\\\"gridState.sort\\\"\\r\\n                [pageable]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n                (dataStateChange)=\\\"onStateChange($event)\\\"\\r\\n                (edit)=\\\"editHandler($event)\\\" (cancel)=\\\"cancelHandler($event)\\\"\\r\\n                (save)=\\\"saveHandler($event)\\\" (remove)=\\\"removeHandler($event)\\\"\\r\\n                (add)=\\\"addHandler($event, myForm)\\\"\\r\\n                [navigable]=\\\"true\\\">\\r\\n      <ng-template kendoGridToolbarTemplate>\\r\\n        <button kendoGridAddCommand type=\\\"button\\\">Add new</button>\\r\\n      </ng-template>\\r\\n      <kendo-grid-column field=\\\"bookName\\\" title=\\\"Book Name\\\">\\r\\n        <ng-template kendoGridEditTemplate let-dataItem=\\\"books\\\">\\r\\n          <input [(ngModel)]=\\\"books.bookName\\\" kendoGridFocusable name=\\\"bookName\\\" class=\\\"k-textbox\\\" required />\\r\\n        </ng-template>\\r\\n      </kendo-grid-column>\\r\\n      <kendo-grid-column field=\\\"genreID\\\" editor=\\\"numeric\\\" title=\\\"Genre\\\">\\r\\n        <ng-template kendoGridEditTemplate let-dataItem=\\\"books\\\">\\r\\n          <input [(ngModel)]=\\\"books.genreID\\\" kendoGridFocusable name=\\\"genreID\\\" class=\\\"k-textbox\\\" type=\\\"number\\\" />\\r\\n        </ng-template>\\r\\n      </kendo-grid-column>\\r\\n      <kendo-grid-column field=\\\"yearOfPublish\\\" editor=\\\"numeric\\\" title=\\\"Year Of Publish\\\">\\r\\n        <ng-template kendoGridEditTemplate let-dataItem=\\\"books\\\">\\r\\n          <input [(ngModel)]=\\\"books.yearOfPublish\\\"\\r\\n                 kendoGridFocusable\\r\\n                 name=\\\"yearOfPublish\\\"\\r\\n                 required\\r\\n                 min=\\\"876\\\"\\r\\n                 max=\\\"2018\\\"\\r\\n                 class=\\\"k-textbox\\\"\\r\\n                 type=\\\"number\\\" />\\r\\n        </ng-template>\\r\\n      </kendo-grid-column>\\r\\n      <kendo-grid-command-column title=\\\"command\\\" width=\\\"220\\\">\\r\\n        <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\r\\n          <button kendoGridEditCommand type=\\\"button\\\" [primary]=\\\"true\\\">Edit</button>\\r\\n          <button kendoGridRemoveCommand type=\\\"button\\\">Remove</button>\\r\\n          <button kendoGridSaveCommand type=\\\"button\\\"\\r\\n                  [disabled]=\\\"myForm.invalid || myForm.pristine\\\">\\r\\n            {{ isNew ? 'Add' : 'Update' }}\\r\\n          </button>\\r\\n          <button kendoGridCancelCommand type=\\\"button\\\">{{ isNew ? 'Discard changes' : 'Cancel' }}</button>\\r\\n        </ng-template>\\r\\n      </kendo-grid-command-column>\\r\\n    </kendo-grid>\\r\\n  </form>-->\\r\\n\"","import { Component, OnInit, Input, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { DataBookService } from './data.bookService';\r\nimport { Book } from './book';\r\nimport { State, process } from '@progress/kendo-data-query';\r\nimport { state } from '@angular/animations';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { GridComponent } from '@progress/kendo-angular-grid';\r\nimport { send } from 'q';\r\n\r\n\r\n@Component({\r\n  selector: 'app-books-list',\r\n  templateUrl: './book-list.component.html'\r\n})\r\nexport class BookListComponent implements OnInit {\r\n\r\n  public books: Book[] = [];\r\n\r\n  private editedRowIndex: number;\r\n  private book: Book;\r\n  private isNew: false;\r\n  @ViewChild(GridComponent) private grid: GridComponent;\r\n  public formGroup: FormGroup;\r\n  public get isInEditingMode(): boolean {\r\n    return this.editedRowIndex !== undefined || this.isNew;\r\n  }\r\n\r\n  public gridState: State = {\r\n    sort: [],\r\n    skip: 0,\r\n    take: 10\r\n  };\r\n\r\n  constructor(private dataService: DataBookService, private formBuilder: FormBuilder) {\r\n    this.createFormGroup = this.createFormGroup.bind(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.load();\r\n  }\r\n\r\n  public onStateChange(state: State) {\r\n    this.gridState = state;\r\n    console.log(state + \" HERE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\r\n    this.load();\r\n  }\r\n\r\n  load() {\r\n    this.dataService.getBooks().subscribe(data => {\r\n      this.books = data;\r\n    });\r\n  }\r\n\r\n  addHandler({ sender, dataItem }) {\r\n    sender.addRow(new Book(0, null, '', null))\r\n  }\r\n\r\n  public saveHandler({ sender, rowIndex, dataItem, isNew }) {\r\n    debugger;\r\n    if (isNew) {\r\n      \r\n      this.dataService.createBook(dataItem);\r\n      sender.closeRow(rowIndex);\r\n\r\n    }\r\n    if (!isNew) {\r\n      console.log(JSON.stringify(dataItem) + \" from component\");\r\n      this.dataService.updateBook(this.formGroup.value);\r\n        \r\n      // close the editor, that is, revert the row back into view mode\r\n      sender.closeRow(rowIndex);\r\n      //sender.collapseRow(rowIndex);\r\n    }\r\n\r\n    this.ngOnInit();\r\n  }\r\n\r\n  editHandler({ sender, dataItem, rowIndex, colIndex }) {\r\n    ///*new Book(dataItem.bookID, dataItem.genreID, dataItem.bookName, dataItem.yearOfPublish)*/\r\n    //console.log(JSON.stringify(dataItem) + \" from HANDLER\");\r\n    //sender.addRow(rowIndex, dataItem/*, this.formGroup.value*//*  .get(dataItem)*/);\r\n\r\n    if (this.formGroup && !this.formGroup.valid) {\r\n      return;\r\n    }\r\n\r\n    //this.saveRow();\r\n    this.formGroup = this.formBuilder.group(dataItem);\r\n    this.editedRowIndex = rowIndex;\r\n    sender.editRow(rowIndex, this.formGroup);\r\n   \r\n    debugger;\r\n\r\n  }\r\n\r\n  removeHandler({ dataItem }) {\r\n    debugger;\r\n    this.dataService.deleteBook(dataItem.bookID);\r\n  }\r\n\r\n  public createFormGroup(args: any): FormGroup {\r\n    const item = args.isNew ? new Book(0,null,'',null) : args.dataItem;\r\n    this.formGroup = this.formBuilder.group({\r\n      'bookID': [item.bookID, Validators.maxLength],\r\n      'bookName': [item.bookName, Validators.required],\r\n      'genreID': item.genreID,\r\n      'yearOfPublish': [item.yearOfPublish, Validators.compose([Validators.required, Validators.min(864), Validators.max(2018)])]\r\n    });\r\n\r\n    return this.formGroup;\r\n  }\r\n\r\n  private saveRow(): void {\r\n    if (this.isInEditingMode) {\r\n      this.saveHandler(this.formGroup.value);\r\n    }\r\n\r\n    this.closeEditor(this.grid);\r\n  }\r\n  private closeEditor(grid: GridComponent, rowIndex: number = this.editedRowIndex): void {\r\n    this.isNew = false;\r\n    grid.closeRow(rowIndex);\r\n    this.editedRowIndex = undefined;\r\n    this.formGroup = undefined;\r\n  }\r\n}\r\n","export class Book {\r\n  constructor(\r\n  public bookID: number,\r\n  public genreID: number,\r\n  public bookName: string,\r\n  public yearOfPublish: number\r\n  ) { }\r\n}\r\n\r\n\r\n/* \r\n  public bookID: number;\r\n  public genreID: number;\r\n  public bookName: string;\r\n  public yearOfPublish: number;*/\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Book } from './book';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Http, Response } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class DataBookService extends BehaviorSubject<any[]> {\r\n  behaviorSubject: any;\r\n  private url = 'http://localhost:49403/api/Book';\r\n\r\n  private data: any[] = [];\r\n\r\n  public behavorSubject : any = new BehaviorSubject(this.data);\r\n\r\n  constructor(private http: HttpClient) {\r\n    super([]);\r\n  }\r\n\r\n  getBooks(): Observable<Book[]> {\r\n    let result = this.http.get<Book[]>(this.url + '/getAll');\r\n\r\n    return result;\r\n  }\r\n  getBook<Book>(id: number) {\r\n    let result = this.http.get(this.url + '/get' + id);\r\n\r\n    return result;\r\n  }\r\n  createBook<Book>(book: Book): Observable<Book> {\r\n    debugger;\r\n    let result = this.http.post<Book>(this.url + \"/create\", book)/*.toPromise()*/;\r\n    //this.getBooks();\r\n    return result;\r\n  }\r\n    \r\n  updateBook(book: Book) {\r\n    let result = this.http.put(this.url + '/edit/' + book.bookID, book).toPromise();\r\n    debugger;\r\n    return result;\r\n  }\r\n  deleteBook(id: number) {\r\n    let result = this.http.get(this.url + '/delete/' + id).toPromise();\r\n\r\n    return result;\r\n  }\r\n\r\n  private reset() {\r\n    this.data = [];\r\n  }\r\n\r\n  public resetItem(data: any) {\r\n    if (!data) { return; }\r\n\r\n    if (item => item.bookID === data.bookID) {\r\n      // find orignal data item\r\n      const originalDataItem = this.getBook(data.bookID);\r\n      // revert changes\r\n\r\n      Object.assign(originalDataItem, data);\r\n\r\n    }\r\n\r\n    super.next(this.data);\r\n  }\r\n}\r\n","import { Component } from '@angular/core'\r\n\r\n@Component({\r\n  template: '<h2>Not Found</h2>'\r\n})\r\n\r\nexport class NotFoundComponent{}\r\n","module.exports = \"body {\\r\\n  font-family: \\\"Lato\\\", sans-serif;\\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n  height: 100%;\\r\\n  width: 20%;\\r\\n  position: fixed;\\r\\n  z-index: 1;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  background-color: #111;\\r\\n  overflow-x: hidden;\\r\\n  padding-top: 20px;\\r\\n}\\r\\n\\r\\n.sidenav a {\\r\\n    padding: 6px 6px 6px 32px;\\r\\n    text-decoration: none;\\r\\n    font-size: 25px;\\r\\n    color: #818181;\\r\\n    display: block;\\r\\n  }\\r\\n\\r\\n.sidenav a:hover {\\r\\n      color: #f1f1f1;\\r\\n    }\\r\\n\\r\\n@media screen and (max-height: 450px) {\\r\\n  .sidenav {\\r\\n    padding-top: 15px;\\r\\n  }\\r\\n\\r\\n    .sidenav a {\\r\\n      font-size: 18px;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<!--<div class='main-nav'>\\r\\n  <div class='navbar navbar-inverse'>\\r\\n    <div class='navbar-header'>\\r\\n      <button type='button' class='navbar-toggle' data-toggle='collapse' data-target='.navbar-collapse'>\\r\\n        <span class='sr-only'>Toggle navigation</span>\\r\\n        <span class='icon-bar'></span>\\r\\n        <span class='icon-bar'></span>\\r\\n        <span class='icon-bar'></span>\\r\\n      </button>\\r\\n      <a class='navbar-brand' [routerLink]=\\\"['/']\\\">WebApplication1</a>\\r\\n    </div>\\r\\n    <div class='clearfix'></div>\\r\\n    <div class='navbar-collapse collapse'>\\r\\n      <ul class='nav navbar-nav'>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/']\\\">\\r\\n            <span class='glyphicon glyphicon-home'></span> Home\\r\\n          </a>\\r\\n        </li>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/edit/:id']\\\">\\r\\n            <span class='glyphicon glyphicon-education'></span> Edit\\r\\n          </a>\\r\\n        </li>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/create']\\\">\\r\\n            <span class='glyphicon glyphicon-th-list'></span> Create\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>-->\\r\\n<div class=\\\"sidenav\\\">\\r\\n  <h1><a [routerLink]=\\\"['/']\\\">WebLibrary</a></h1>\\r\\n  <a href=\\\"#\\\">Authors list</a>\\r\\n  <a href=\\\"#\\\">Library contacts</a>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}